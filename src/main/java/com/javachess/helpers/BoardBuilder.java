package com.javachess.helpers;

import com.javachess.board.Color;
import com.javachess.board.Square;
import com.javachess.pieces.Bishop;
import com.javachess.pieces.King;
import com.javachess.pieces.Knight;
import com.javachess.pieces.Pawn;
import com.javachess.pieces.Piece;
import com.javachess.pieces.Queen;
import com.javachess.pieces.Tower;

public class BoardBuilder {
	public static Piece[][] CLASSIC = {
			{ new Tower(Color.WHITE, new Square(1, 1)),
					new Knight(Color.WHITE, new Square(2, 1)),
					new Bishop(Color.WHITE, new Square(3, 1)),
					new Queen(Color.WHITE, new Square(4, 1)),
					new King(Color.WHITE, new Square(5, 1)),
					new Bishop(Color.WHITE, new Square(6, 1)),
					new Knight(Color.WHITE, new Square(7, 1)),
					new Tower(Color.WHITE, new Square(8, 1)) },
			{ new Pawn(Color.WHITE, new Square(1, 2)),
					new Pawn(Color.WHITE, new Square(2, 2)),
					new Pawn(Color.WHITE, new Square(3, 2)),
					new Pawn(Color.WHITE, new Square(4, 2)),
					new Pawn(Color.WHITE, new Square(5, 2)),
					new Pawn(Color.WHITE, new Square(6, 2)),
					new Pawn(Color.WHITE, new Square(7, 2)),
					new Pawn(Color.WHITE, new Square(8, 2)) },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ new Pawn(Color.BLACK, new Square(1, 7)),
					new Pawn(Color.BLACK, new Square(2, 7)),
					new Pawn(Color.BLACK, new Square(3, 7)),
					new Pawn(Color.BLACK, new Square(4, 7)),
					new Pawn(Color.BLACK, new Square(5, 7)),
					new Pawn(Color.BLACK, new Square(6, 7)),
					new Pawn(Color.BLACK, new Square(7, 7)),
					new Pawn(Color.BLACK, new Square(8, 7)) },
			{ new Tower(Color.BLACK, new Square(1, 8)),
					new Knight(Color.BLACK, new Square(2, 8)),
					new Bishop(Color.BLACK, new Square(3, 8)),
					new King(Color.BLACK, new Square(4, 8)),
					new Queen(Color.BLACK, new Square(5, 8)),
					new Bishop(Color.BLACK, new Square(6, 8)),
					new Knight(Color.BLACK, new Square(7, 8)),
					new Tower(Color.BLACK, new Square(8, 8)) } };

	public static Piece[][] NO_KING = {
			{ new Tower(Color.WHITE, new Square(1, 1)),
					new Knight(Color.WHITE, new Square(2, 1)),
					new Bishop(Color.WHITE, new Square(3, 1)),
					new Queen(Color.WHITE, new Square(4, 1)), null,
					new Bishop(Color.WHITE, new Square(6, 1)),
					new Knight(Color.WHITE, new Square(7, 1)),
					new Tower(Color.WHITE, new Square(8, 1)) },
			{ new Pawn(Color.WHITE, new Square(1, 2)),
					new Pawn(Color.WHITE, new Square(2, 2)),
					new Pawn(Color.WHITE, new Square(3, 2)),
					new Pawn(Color.WHITE, new Square(4, 2)),
					new Pawn(Color.WHITE, new Square(5, 2)),
					new Pawn(Color.WHITE, new Square(6, 2)),
					new Pawn(Color.WHITE, new Square(7, 2)),
					new Pawn(Color.WHITE, new Square(8, 2)) },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ new Pawn(Color.BLACK, new Square(1, 7)),
					new Pawn(Color.BLACK, new Square(2, 7)),
					new Pawn(Color.BLACK, new Square(3, 7)),
					new Pawn(Color.BLACK, new Square(4, 7)),
					new Pawn(Color.BLACK, new Square(5, 7)),
					new Pawn(Color.BLACK, new Square(6, 7)),
					new Pawn(Color.BLACK, new Square(7, 7)),
					new Pawn(Color.BLACK, new Square(8, 7)) },
			{ new Tower(Color.BLACK, new Square(1, 8)),
					new Knight(Color.BLACK, new Square(2, 8)),
					new Bishop(Color.BLACK, new Square(3, 8)), null,
					new Queen(Color.BLACK, new Square(5, 8)),
					new Bishop(Color.BLACK, new Square(6, 8)),
					new Knight(Color.BLACK, new Square(7, 8)),
					new Tower(Color.BLACK, new Square(8, 8)) } };

	public static Piece[][] KING_THREATENED = {
			{ new Tower(Color.WHITE, new Square(1, 1)),
					new Knight(Color.WHITE, new Square(2, 1)),
					new Bishop(Color.WHITE, new Square(3, 1)),
					new Queen(Color.WHITE, new Square(4, 1)),
					new King(Color.WHITE, new Square(5, 1)),
					new Bishop(Color.WHITE, new Square(6, 1)),
					new Knight(Color.WHITE, new Square(7, 1)),
					new Tower(Color.WHITE, new Square(8, 1)) },
			{ new Pawn(Color.WHITE, new Square(1, 2)),
					new Pawn(Color.WHITE, new Square(2, 2)),
					new Pawn(Color.WHITE, new Square(3, 2)),
					new Pawn(Color.WHITE, new Square(4, 2)),
					new Queen(Color.BLACK, new Square(5, 2)),
					new Pawn(Color.WHITE, new Square(6, 2)),
					new Pawn(Color.WHITE, new Square(7, 2)),
					new Pawn(Color.WHITE, new Square(8, 2)) },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ new Pawn(Color.BLACK, new Square(1, 7)),
					new Pawn(Color.BLACK, new Square(2, 7)),
					new Pawn(Color.BLACK, new Square(3, 7)),
					new Pawn(Color.BLACK, new Square(4, 7)),
					new Pawn(Color.BLACK, new Square(5, 7)),
					new Pawn(Color.BLACK, new Square(6, 7)),
					new Pawn(Color.BLACK, new Square(7, 7)),
					new Pawn(Color.BLACK, new Square(8, 7)) },
			{ new Tower(Color.BLACK, new Square(1, 8)),
					new Knight(Color.BLACK, new Square(2, 8)),
					new Bishop(Color.BLACK, new Square(3, 8)),
					new King(Color.BLACK, new Square(4, 8)),
					new Queen(Color.BLACK, new Square(5, 8)),
					new Bishop(Color.BLACK, new Square(6, 8)),
					new Knight(Color.BLACK, new Square(7, 8)),
					new Tower(Color.BLACK, new Square(8, 8)) } };

	public static Piece[][] CHECKMATE = {
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ null, null, new Knight(Color.WHITE, new Square(1, 7)), null,
					null, null, null, null },
			{ null, new King(Color.WHITE, new Square(2, 7)),
					new Bishop(Color.WHITE, new Square(3, 7)), null, null,
					null, null, null },
			{ null, null, null, null, null, null, null, null },
			{ new King(Color.BLACK, new Square(1, 8)), null, null, null, null,
					null, null, null } };
}
